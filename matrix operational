import numpy as np

def get_matrix(prompt):
    print(prompt)
    rows = int(input("Enter the number of rows: "))
    cols = int(input("Enter the number of columns: "))
    print("Enter the elements row by row (space-separated):")
    matrix = []
    for i in range(rows):
        row = list(map(float, input(f"Row {i+1}: ").split()))
        if len(row) != cols:
            print("Invalid number of elements in row. Please try again.")
            return get_matrix(prompt)
        matrix.append(row)
    return np.array(matrix)
def display_matrix(matrix, label="Matrix"):
    print(f"\n{label}:\n{matrix}\n")
def matrix_addition():
    print("Matrix Addition")
    A = get_matrix("Enter the first matrix:")
    B = get_matrix("Enter the second matrix:")
    if A.shape != B.shape:
        print("Error: Matrices must have the same dimensions for addition.")
        return
    result = A + B
    display_matrix(result, "Result")
def matrix_subtraction():
    print("Matrix Subtraction")
    A = get_matrix("Enter the first matrix:")
    B = get_matrix("Enter the second matrix:")
    if A.shape != B.shape:
        print("Error: Matrices must have the same dimensions for subtraction.")
        return
    result = A - B
    display_matrix(result, "Result")
def matrix_multiplication():
    print("Matrix Multiplication")
    A = get_matrix("Enter the first matrix:")
    B = get_matrix("Enter the second matrix:")
    if A.shape[1] != B.shape[0]:
        print("Error: Number of columns in the first matrix must equal the number of rows in the second matrix.")
        return
    result = np.dot(A, B)
    display_matrix(result, "Result")
def matrix_transpose():
    print("Matrix Transpose")
    A = get_matrix("Enter the matrix:")
    result = A.T
    display_matrix(result, "Transpose")
def matrix_determinant():
    print("Matrix Determinant")
    A = get_matrix("Enter the square matrix:")
    if A.shape[0] != A.shape[1]:
        print("Error: Determinant can only be calculated for square matrices.")
        return
    result = np.linalg.det(A)
    print(f"\nDeterminant: {result:.2f}\n")
def main():
    while True:
        print("""
Matrix Operations Tool:
1. Addition
2. Subtraction
3. Multiplication
4. Transpose
5. Determinant
6. Exit
        """)
        choice = input("Choose an operation (1-6): ")
        if choice == "1":
            matrix_addition()
        elif choice == "2":
            matrix_subtraction()
        elif choice == "3":
            matrix_multiplication()
        elif choice == "4":
            matrix_transpose()
        elif choice == "5":
            matrix_determinant()
        elif choice == "6":
            print("Exiting Matrix Operations Tool. Goodbye!")
            break
        else:
            print("Invalid choice. Please select a valid option.")

if __name__ == "__main__":
    main()
